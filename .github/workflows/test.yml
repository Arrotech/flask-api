name: Python application
on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]
jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt;

      - name: Test with pytest
        run: |
          pip install -U pip wheel coverage coveralls
          pytest --cov-report xml --cov=app

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          parallel: true

      - if: startsWith(matrix.os, 'ubuntu') == true
        run: coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - if: startsWith(matrix.os, 'ubuntu') == true
        name: Build and Push Docker Image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: arrotech/flask-starter-template
          tags: 2
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  coveralls_finish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: AndreMiras/coveralls-python-action@develop
        with:
          parallel-finished: true
    # - name: Deploy to Heroku
    #   uses: akhileshns/heroku-deploy@v3.0.0
    #   with:
    #     heroku_api_key: ${{secrets.HEROKU_API_KEY}}
    #     heroku_app_name: "flask-api-starter-template"
    #     heroku_email: "harungachanjagitundu@gmail.com"
    #     usedocker: true
